	.TITLE	FORD
POS1	=0
POS2	=2
POS3	=4
POS4	=6
ADIR1	=10
FTIM1	=14
TEMP3	=20
FRAME	=22
SNUM	=23
SOUND	=24
TIMER	=25
CRASH	=26
HSCR	=27
PF1	=30
PF2	=31
PF3	=32
PF4	=33
STIM1	=34
FLAG1	=40
PWALL1	=44
PPOS1	=50
PPOS2	=52
PPOS3	=54
PPOS4	=56
ACOD1	=60
SCR	=64
PTR	=70
TEMP1	=72
WALL1	=74
CREDIT	=100
TAMT	=101
TOG	=102
AFLAG	=103
COINS	=104
TONE	=105
TEMP2	=106
T1	=110
T2	=111
T3	=112
T4	=113
UP1	=114
UP2	=115
UP3	=116
UP4	=117
CNT	=120
WIN	=121
SIMUL	=122
CNTRL	=126
RTEST	=127
SBI1	=4032
SBI2	=4037
SBI3	=4050
SBI4	=4055
ST	=4200
CLICK	=6020
TEST	=14000
TESTV	=252
AMODE	=6000
TREST	=6200
SB1	=6060
SB2	=6100
SB3	=6120
SB4	=6140
GSW	=4060
CSW	=4061
COINAD	=4100
SPOS1	=2360
SPOS2	=2726
SPOS3	=3217
SPOS4	=2651
APOS1	=2620
APOS2	=2724
APOS3	=3017
APOS4	=2713
TPOS1	=2320
TPOS2	=2727
TPOS3	=3257
TPOS4	=2650
TLOS1	=2260
TLOS2	=2730
TLOS3	=3317
TLOS4	=2647
PLAYFIELD=2000
SW1	=4030
SW2	=4034
SW3	=4050
SW4	=4054
	.ASECT
	.=30000
PWRON:	SEI			;POWER ON RESET
	CLD
	LDX	I,177		;SET UP STACK
	TXS
	LDA	A,TEST
	CMP	I,TESTV		;DIAGNOSTIC PRESENT?
	BEQ	TESTVJ		;YES, GO TO TEST
	BNE	MAINT		;NO, GO TO MAIN LOOP
TESTVJ:	JSR	A,TEST
MAINT:	JSR	A,SETUP		;CLEAR CREDIT
MAIN:	JSR	A,ATRACT
	JSR	A,START
	JMP	A,MAIN
;ATTRACT SUBROUTINE
ATRACT:	LDA	I,0
	STA	Z,CRASH
	STA	A,AMODE+1	;TURN OFF SOUND
	STA	A,SB1
	STA	A,SB2
	STA	A,SB3
	STA	A,SB4
	STA	Z,AFLAG		;SET ATTRACT FLAG=0
	LDX	I,0
A40:	STA	ZX,PF1		;ZERO PLAYER FLAGS
	INX
	CPX	I,4
	BNE	A40
	STA	A,TREST		;PULSE WATCHDOG
	JSR	A,BLANK		;BLANK SCREEN
	STA	A,TREST		;PULSE WATCHDOG
	JSR	A,INITL		;INITIALIZE
	JSR	A,SCORE		;OUTPUT SCORE
	LDA	I,104		;OUTPUT COIN MESSAGE
	BIT	A,CSW
	BPL	A70
	LDA	I,102
	BVC	A70
	LDA	I,103
A70:	JSR	A,MESS
	LDA	I,101		;OUTPUT GAME OVER
	JSR	A,MESS
A1:	JSR	A,PLAY
	LDA	A,ST		;SELF-TEST?
	BMI	S,+5		;NO
	JSR	A,TRAM		;YES, GO TO SELF-TEST
	LDA	Z,CREDIT
	BNE	A2
	LDA	Z,TEMP2
	BMI	ATRACT
	JSR	A,WAIT
	JMP	A,A1
A2:	LDA	I,1
	STA	Z,AFLAG		;SET ATTRACT FLAG
	LDA	I,217
	STA	Z,TIMER		;SET UP BUTTON TIMER
	JSR	A,BLANK
	JSR	A,INITL
	JSR	A,SCORE
	LDA	I,104
	BIT	A,CSW
	BPL	A50
	LDA	I,102
	BVC	A50
	LDA	I,103
A50:	JSR	A,MESS
	LDA	I,105
	JSR	A,MESS
A3:	STA	A,CLICK
	LDA	A,SBI1		;CHECK START BUTTONS
	BMI	A4
	LDX	I,0
	LDA	ZX,PF1
	BNE	A4
	BEQ	A10
A4:	LDA	A,SBI2
	BMI	A5
	LDX	I,1
	LDA	ZX,PF1
	BNE	A5
	BEQ	A10
A5:	LDA	A,SBI3
	BMI	A6
	LDX	I,2
	LDA	ZX,PF1
	BNE	A6
	BEQ	A10
A6:	LDA	A,SBI4
	BMI	A7
	LDX	I,3
	LDA	ZX,PF1
	BNE	A7
A10:	LDA	Z,CREDIT	;ANY CREDIT?
	BEQ	A7		;NO
	DEC	Z,CREDIT	;YES, DECREMENT CREDIT
	LDA	I,1
	STA	ZX,PF1		;SET PLAYER FLAG
A7:	LDA	Z,CREDIT
	CMP	I,4
	BCC	A51
	LDA	I,4
A51:	ORA	I,260
	STA	A,PLAYFIELD+526
	LDX	I,0
A9:	LDA	ZX,PF1		;ANY PLAYER FLAG SET?
	BNE	A8		;YES
	INX
	CPX	I,4
	BNE	A9
A20:	INC	Z,FRAME		;NO, INCREMENT FRAME
	LDA	Z,FRAME
	AND	I,10
	BEQ	A21
	STA	A,SB1+1		;TURN LITES ON
	STA	A,SB2+1
	STA	A,SB3+1
	STA	A,SB4+1
	LDA	I,110
	JSR	A,MESS
	LDA	I,106
	JSR	A,MESS
	JMP	A,A30
A21:	LDA	Z,PF1		;TURN SELECTED LITES OFF
	BEQ	A220
	STA	A,CLICK+1
	BNE	A22
A220:	STA	A,SB1
A22:	LDA	Z,PF2
	BEQ	A230
	STA	A,CLICK+1
	BNE	A23
A230:	STA	A,SB2
A23:	LDA	Z,PF3
	BEQ	A240
	STA	A,CLICK+1
	BNE	A24
A240:	STA	A,SB3
A24:	LDA	Z,PF4
	BEQ	A250
	STA	A,CLICK+1
	BNE	A25
A250:	STA	A,SB4
A25:	LDA	I,210
	JSR	A,MESS
	LDA	I,206
	JSR	A,MESS
A30:	JSR	A,WAIT
	JMP	A,A3
A8:	INC	Z,TIMER		;TIMER DONE?
	BNE	A20		;NO
	STA	A,SB1		;YES
	STA	A,SB2
	STA	A,SB3
	STA	A,SB4
	LDA	Z,PF1
	BEQ	A31
	STA	A,SB1+1
A31:	LDA	Z,PF2
	BEQ	A32
	STA	A,SB2+1
A32:	LDA	Z,PF3
	BEQ	A33
	STA	A,SB3+1
A33:	LDA	Z,PF4
	BEQ	A34
	STA	A,SB4+1
A34:	RTS

;START SUBROUTINE
START:	JSR	A,BLANK		;BLANK SCREEN
	JSR	A,INITL		;INITIALIZE
	STA	A,TREST
	LDA	I,0
	STA	Z,CRASH
	STA	Z,TONE
	STA	A,CLICK
	LDX	I,0
S6:	STA	ZX,SCR		;ZERO SCORE
	INX
	CPX	I,4
	BNE	S6
	JSR	A,SCORE		;OUTPUT SCORE
	LDA	I,4
	STA	Z,SOUND
	STA	A,AMODE		;TURN ON SOUND
S2:	JSR	A,PLAY
	LDA	Z,TEMP2
	BMI	S750
S751:	JSR	A,WAIT
	JMP	A,S2
S750:	STA	A,CLICK
	LDA	I,0
	STA	Z,CRASH
	LDX	I,0
	LDY	I,0
S101:	LDA	ZX,SCR
	CMP	Z,HSCR
	BNE	S100
	INY
S100:	INX
	CPX	I,4
	BNE	S101
	LDA	I,0
	CPY	I,3
	BCC	S102
	LDA	I,1
S102:	STA	Z,CNT
	LDX	I,217		;FREEZE SCREEN FOR AWHILE
S79:	JSR	A,WAIT
	LDA	Z,CNT		;FLASH GAME OVER?
	BEQ	S752		;NO
	LDY	I,101
	TXA
	AND	I,30
	BNE	S103
	LDY	I,201
S103:	TYA
	JSR	A,MESS
S752:	INX
	BNE	S79
	LDA	Z,CNT		;GAME OVER?
	BEQ	S400		;NO
	LDX	I,0		;YES, SELECT GAME WINNER
S401:	LDA	ZX,SCR
	CMP	Z,HSCR
	BCC	S402		;GOT THE WINNER
	INX
	CPX	I,4
	BNE	S401
	BEQ	S400		;NO WINNER
S402:	STX	Z,WIN
S400:	LDA	Z,WIN
	BMI	S47
	JSR	A,BLANK
	JSR	A,INITL
	JSR	A,SCORE
	STA	A,TREST
	LDA	I,107		;FLASH WINNER'S ARROW
	JSR	A,MESS
	LDX	I,144
S40:	JSR	A,WAIT
	TXA
	AND	I,14
	BNE	S41
	LDA	I,0
	STA	A,APOS1
	STA	A,APOS2
	STA	A,APOS3
	STA	A,APOS4
	BEQ	S45
S41:	LDY	Z,WIN
	BNE	S42
	LDA	I,276
	STA	A,APOS1
	BMI	S45
S42:	CPY	I,1
	BNE	S43
	LDA	I,277
	STA	A,APOS2
	BMI	S45
S43:	CPY	I,2
	BNE	S44
	LDA	I,274
	STA	A,APOS3
	BMI	S45
S44:	LDA	I,275
	STA	A,APOS4
S45:	INX
	BNE	S40
S47:	LDA	Z,CNT		;GAME OVER?
	BNE	S78		;YES
	JSR	A,BLANK
	JSR	A,INITL		;NO, RESTART GAME
	LDA	I,4
	STA	Z,SOUND
	JSR	A,SCORE
	LDX	I,0
S50:	LDA	ZX,FLAG1	;ELIMINATE ARROWS
	CMP	I,2		;OF PLAYERS WHO
	BNE	S51		;ARE GONE
	LDA	I,0
	CPX	I,0
	BNE	S52
	STA	A,SPOS1
	BEQ	S51
S52:	CPX	I,1
	BNE	S53
	STA	A,SPOS2
	BEQ	S51
S53:	CPX	I,2
	BNE	S54
	STA	A,SPOS3
	BEQ	S51
S54:	STA	A,SPOS4
S51:	INX
	CPX	I,4
	BNE	S50
	JMP	A,S2
S78:	RTS			;ALL DONE, RETURN TO MAINLINE
;PLAY SUBROUTINE
PLAY:	LDX	I,0
P8:	LDA	ZX,FLAG1
	CMP	I,377
	BEQ	P41
	INX
	CPX	I,4
	BNE	P8
	LDA	Z,TONE		;IN NORMAL PLAY
	BEQ	P67		;MAKE SOUND WHOOSH
	LDA	I,4
	SEC
	SBC	Z,TONE
	DEC	Z,TONE
P67:	STA	Z,CRASH
	BPL	P40
P41:	LDA	Z,CRASH
	BEQ	P40
	DEC	Z,CRASH
P40:	JSR	A,SCAN		;LOOK AT SWITCHES
	LDA	Z,TIMER		;TIME TO UPDATE?
	BNE	P2		;NO
	LDA	Z,TAMT		;YES, RESET TIMER
	STA	Z,TIMER
	LDY	I,0
	LDX	I,0
P44:	LDA	ZX,FLAG1	;COUNT # OF PLAYERS
	BEQ	P45		;NOT GOING FORWARD
	INY			;IF 3 OR GREATER,
P45:	INX			;BYPASS GOING FORWARD
	CPX	I,4		;LOGIC
	BNE	P44
	CPY	I,3
	BCS	P1
	LDA	I,0
	STA	Z,CNT		;SET UP TOGGLE COUNTER
	LDX	Z,TOG
	LDA	Z,AFLAG		;IN ATTRACT MODE
	BEQ	P42		;IGNORE SCORE
	LDA	ZX,SCR		;PLAYER ELIMINATED?
	CMP	Z,HSCR
	BEQ	P1		;YES
P42:	LDA	ZX,FLAG1	;PLAYER GOING FORWARD?
	BNE	P1		;NO
	JSR	A,FOR		;YES, DO SO
P1:	INC	Z,TOG		;BUMP TOG
	LDA	Z,TOG
	CMP	I,4
	BNE	P100
	LDA	I,0
	STA	Z,TOG
P100:	LDX	Z,TOG		;VALID TOGGLE?
	LDA	ZX,FLAG1
	BEQ	P2		;YES
	LDA	Z,CNT		;CHECKED ALL 4 PLAYERS?
	CMP	I,4
	BEQ	P2		;YES
	INC	Z,CNT		;NO, GET NEXT TOGGLE
	JMP	A,P1
P2:	DEC	Z,TIMER		;DECREMENT TIMER
	LDX	I,0
P3:	LDA	ZX,FLAG1	;GOING FORWARD?
	BEQ	P4		;YES
	CMP	I,377		;COLLIDING?
	BNE	P5		;NO
	JSR	A,COL		;YES
	JMP	A,P4
P5:	CMP	I,1		;TOPPLING?
	BNE	P6		;NO
	JSR	A,TOP		;YES
	JMP	A,P4
P6:	CMP	I,2		;ALL DONE?
	BEQ	P4		;YES
	JSR	A,ELIM		;NO,CLEAR OUT DOMINOES
P4:	INX
	CPX	I,4
	BNE	P3
	LDA	Z,AFLAG		;IF IN ATTRACT MODE
	BEQ	P43		;IGNORE FOLLOWING LOGIC
	LDA	I,1
	STA	Z,TEMP1
	LDX	I,0
	LDY	I,0
P20:	LDA	ZX,PF1		;CHECK TO SEE IF
	BNE	P21		;ONLY COMPUTER REMAINS
	LDA	ZX,FLAG1
	BNE	P22
	INY
	BNE	P22
P21:	LDA	ZX,FLAG1
	CMP	I,2
	BNE	P43
	LDA	ZX,SCR		;IS THIS PLAYER
	CMP	Z,HSCR		;ELIMINATED FOR GOOD?
	BCS	P22		;YES
	LDA	I,0		;NO, CLEAR TEMP1
	STA	Z,TEMP1
P22:	INX
	CPX	I,4
	BNE	P20
	CPY	I,2		;IF SO, GIVE ALL REMAINING
	BCC	P43		;COMPUTER PLAYERS BUT ONE
	DEY			;A FALLEN DOMINO SO AS TO
	LDX	I,0		;END HEAT IMMEDIATELY
P23:	LDA	ZX,PF1
	BNE	P24
	LDA	ZX,FLAG1
	BNE	P24
	LDA	Z,TEMP1		;ANY USERS STILL ACTIVE?
	BNE	P55		;NO
	LDA	I,1		;YES,DEFEAT COMPUTER
	STA	Z,CNTRL		;CONTROL OF REMAINING
	BNE	P43		;PLAYERS
P55:	LDA	Z,HSCR		;KILL ALL BUT ONE
	STA	ZX,SCR		;REMAINING COMPUTER PLAYERS
	LDA	I,2
	STA	ZX,FLAG1
P25:	DEY
	BEQ	P43
P24:	INX
	CPX	I,4
	BNE	P23
P43:	LDX	I,0
	LDA	I,377
	STA	Z,WIN
P470:	LDA	ZX,FLAG1		;RECORD WINNER
	CMP	I,2
	BEQ	P471
	LDA	ZX,SIMUL
	BNE	P471
	STX	Z,WIN
P471:	INX
	CPX	I,4
	BNE	P470
	LDY	I,0
	LDX	I,0
P7:	LDA	ZX,FLAG1		;HEAT FINISHED?
	CMP	I,2
	BNE	P9
	INY
P9:	INX
	CPX	I,4
	BNE	P7
	CPY	I,3
	BCS	S75
S80:	INC	Z,FRAME		;BUMP FRAME COUNTER
	LDA	Z,FRAME		;TIME TO SPEEDUP?
	AND	I,177
	BNE	S81		;NO
	LDA	Z,TAMT		;YES
	CMP	I,7		;MAX SPEEDUP
	BEQ	S81		;YES
	DEC	Z,TAMT		;NO, SPEED IT UP
S81:	LDA	I,0
	BEQ	S,+4
S75:	LDA	I,377
	STA	Z,TEMP2
	RTS
FOR:	STX	Z,TEMP2
	LDA	Z,AFLAG			;SUPPRESS SOUNDS
	BEQ	F2			;IN ATTRACT MODE
	LDA	AX,SOTAB		;GET CORRECT SOUND
	STA	Z,SOUND
	LDA	I,3
	STA	Z,TONE
F2:	LDA	ZX,PWALL1		;FIRST TIME?
	BNE	F3			;NO
	LDY	ZX,ADIR1		;YES, ASSUME ADIR
	LDX	AY,BTAB
	BPL	F4
F3:	JSR	A,FIND			;FIND CORRECT DOMINO INDEX
F4:	LDY	Z,TEMP2
	LDA	AY,ADIR1		;ACCESS CORRECT DIRECTION TABLE
	BNE	F6
	LDA	AX,TAB1
	BNE	F10
F6:	CMP	I,1
	BNE	F7
	LDA	AX,TAB2
	BNE	F10
F7:	CMP	I,2
	BNE	F8
	LDA	AX,TAB3
	BNE	F10
F8:	LDA	AX,TAB4
F10:	LDY	I,0			;OUTPUT WALL SECTION
	LDX	Z,TEMP2
	CPX	I,1
	BEQ	F40
	CPX	I,3
	BEQ	F40
	ORA	I,200
F40:	JSR	A,OUTX
	AND	I,177
	STA	ZX,PWALL1		;SAVE WALL CODE
	LDA	Z,TEMP2
	ASL
	TAX
	LDA	ZX,POS1			;SAVE POSITION
	STA	ZX,PPOS1
	LDA	ZX,POS1+1
	STA	ZX,PPOS1+1
	LDX	Z,TEMP2
	LDA	ZX,ACOD1
	AND	I,173
	JSR	A,NPOS			;UPDATE POSITION
	LDY	I,0
	JSR	A,INX			;CHECK FOR EMINENT COLLISIONS
	BEQ	F20			;NONE
	STA	ZX,WALL1		;YES
	LDX	I,0			;IF COLLISION IS NOT
	AND	I,173			;WITH AN ARROW, A
F24:	CMP	AX,KTAB			;SIMULTANEOUS
	BEQ	F23			;COLLISION CANNOT OCCUR
	INX
	CPX	I,4
	BNE	F24
	LDX	Z,TEMP2
	LDA	I,377
	STA	ZX,FLAG1
	BMI	F25
F23:	LDA	Z,TEMP2
	ASL
	TAX
	LDA	ZX,POS1			;CHECK FOR
	CMP	AY,POS1			;SIMULTANEOUS
	BNE	F22			;COLLISIONS
	LDA	ZX,POS1+1
	CMP	AY,POS1+1
	BNE	F22
	TYA
	LSR
	TAX
	LDA	I,377
	STA	ZX,FLAG1
	LDA	I,1
	STA	ZX,SIMUL
F22:	INY
	INY
	CPY	I,8.
	BNE	F23
F25:	LDA	Z,AFLAG			;SUPPRESS CRASH
	BEQ	F20			;IN ATTRACT MODE
	LDA	I,15.
	STA	Z,SOUND
	LDA	I,17
	STA	Z,CRASH
F20:	LDX	Z,TEMP2
	LDY	I,0
	LDA	ZX,ACOD1		;OUTUT NEW ARROW
	JSR	A,OUTX
	RTS
SOTAB:	.BYTE	0,4,8.,12.
COL:	STX	Z,TEMP2
	LDY	I,0
	LDA	ZX,FTIM1		;FLASH TIMER STILL ACTIVE?
	BEQ	CL10			;NO
	DEC	ZX,FTIM1		;YES, DECREMENT IT
	LDA	ZX,FTIM1		;TIME TO FLASH?
	AND	I,2
	BNE	CL2
	LDA	ZX,ACOD1		;FLASH ARROW
	JSR	A,OUTX
	RTS
CL2:	LDA	ZX,WALL1		;FLASH WALL
	JSR	A,OUTX
	RTS
CL10:	LDA	I,1			;FLASHING ALL DONE
	STA	ZX,FLAG1		;SET FLAG TO TOPPLE
	LDA	ZX,SIMUL		;SIMULTANEOUS COLLISION?
	BEQ	CL3			;NO
	LDA	I,0			;YES, RESET WALL
	STA	ZX,WALL1		;SECTION TO A BLANK
CL3:	LDY	I,0
	LDX	Z,TEMP2
	LDA	ZX,WALL1
	JSR	A,OUTX
	TXA
	ASL
	TAX
	LDA	ZX,PPOS1		;RESTORE POSITION
	STA	ZX,POS1
	LDA	ZX,PPOS1+1
	STA	ZX,POS1+1
	LDX	Z,TEMP2
	LDA	Z,AFLAG			;MAKE SURE
	BEQ	CL5			;SCORE DOES NOT
	INC	ZX,SCR			;CHANGE IN ATTRACT MODE
	LDA	Z,HSCR
	CMP	ZX,SCR
	BCS	CL5
	STA	ZX,SCR
CL5:	RTS
TOP:	STX	Z,TEMP2
	LDA	ZX,STIM1		;TIME TO TOPPLE?
	BEQ	TO1			;YES
	DEC	ZX,STIM1		;NO, DECREMENT TIMER
	RTS
TO1:	LDY	I,0
	JSR	A,INX			;READ CURRENT POSITION
	JSR	A,VALID
	BCS	TO4
	STA	Z,TEMP1
	ORA	I,1
	JSR	A,OUTX			;TOPPLE DOMINO
	LDA	Z,AFLAG			;SUPPRESS CLICK
	BEQ	TO3			;IN ATTRACT MODE
	JSR	A,TICK
TO3:	LDA	Z,TEMP2
	ASL
	TAX
	LDA	ZX,POS1			;CURRENT POSITION=
	CMP	AX,BPOS			;INITIAL POSITION?
	BNE	TO2			;NO
	LDA	ZX,POS1+1
	CMP	AX,BPOS+1
	BNE	TO2			;NO
	LDA	Z,TEMP2
	ASL
	TAX
	LDA	ZX,PPOS1	;RESTORE POSITION
	STA	ZX,POS1
	LDA	ZX,PPOS1+1
	STA	ZX,POS1+1
	LDX	Z,TEMP2			;YES, ALL DONE
	LDA	I,3			;SET FLAG
	STA	ZX,FLAG1		;TO ELIMINATE
	RTS
TO2:	LDX	Z,TEMP2
	LDA	I,2
	STA	ZX,STIM1		;RESET TOPPLE TIMER
	LDA	Z,TEMP1			;UPDATE POSITION
	AND	I,177
	JSR	A,UPOS
TO4:	RTS
ELIM:	STX	Z,TEMP2		;ELIMINATE DOMINOES
EL2:	LDY	I,0
	LDX	Z,TEMP2		;GET LAST DOMINO
	JSR	A,INX
	AND	I,176		;AND OUT TOPPLE BIT
	JSR	A,VALID
	BCS	EL3
	STA	Z,TEMP1
	LDA	I,0
	JSR	A,OUTX		;ELIMINATE DOMINO
	STA	A,TREST
	LDA	Z,TEMP2
	ASL
	TAX
	LDA	ZX,POS1		;ALL DONE?
	CMP	AX,BPOS
	BNE	EL1		;NO
	LDA	ZX,POS1+1
	CMP	AX,BPOS+1
	BNE	EL1		;NO
	LDX	Z,TEMP2		;YES, ALL DONE
	LDA	I,2
	STA	ZX,FLAG1
EL3:	RTS
EL1:	LDX	Z,TEMP2
	LDA	Z,TEMP1
	JSR	A,UPOS		;UPDATE POSITION
	JMP	A,EL2
OUTX:	CPX	I,0			;OUTPUTS A-REG TO NY,POS
	BNE	OX1			;DEPENDENT ON X-REG
	STA	NY,POS1
	RTS
OX1:	CPX	I,1
	BNE	OX2
	STA	NY,POS2
	RTS
OX2:	CPX	I,2
	BNE	OX3
	STA	NY,POS3
	RTS
OX3:	STA	NY,POS4
	RTS
INX:	CPX	I,0			;INPUTS TO A-REG
	BNE	IN1			;FROM NY,POS
	LDA	NY,POS1			;DEPENDENT ON X-REG
	RTS
IN1:	CPX	I,1
	BNE	IN2
	LDA	NY,POS2
	RTS
IN2:	CPX	I,2
	BNE	IN3
	LDA	NY,POS3
	RTS
IN3:	LDA	NY,POS4
	RTS
;
;MESSAGE ROUTINE
;	ON ENTRY A-REG = BITS 0-5 = # OF MESSAGE
;		       = BIT 6 = 1 WHITE
;				 0 BLACK
;		       = BIT 7 = 1 BLANK MESSAGE
;			         0 WRITE MESSAGE
;
MESS:	STX	Z,TEMP3
	STY	Z,TEMP3+1
	LDX	I,0
	STX	Z,PTR
	STX	Z,PTR+1
	CLC
	ROL
	ROL	Z,PTR		;SAVE R/W BIT
	ROL
	ROL	Z,PTR+1		;SAVE COLOR BIT
	LSR
	TAX
	LDA	AX,MESG
	STA	Z,TEMP1
	LDA	AX,MESG+1
	STA	Z,TEMP1+1
	LDA	AX,POSM
	STA	Z,TEMP2
	LDA	AX,POSM+1
	STA	Z,TEMP2+1
	LDY	I,0
M1:	LDA	NY,TEMP1
	BEQ	M5
	LDX	Z,PTR
	BNE	M2
	CMP	I,40
	BNE	M3
M2:	LDA	I,0
M3:	LDX	Z,PTR+1
	BEQ	M4
	ORA	I,200
M4:	STA	NY,TEMP2
	INY
	BPL	M1
M5:	LDX	Z,TEMP3
	LDY	Z,TEMP3+1
	RTS
SCORE:	LDX	I,0		;OUTPUT CORRECT SCORE DOMINOS
SE1:	LDA	Z,HSCR
	SEC
	SBC	ZX,SCR
	TAY
	LDA	AY,DOTS2
	STA	Z,TEMP3
	LDA	AY,DOTS1
	CPX	I,0
	BNE	SE2
	ORA	I,200
	STA	A,TPOS1
	LDA	Z,TEMP3
	ORA	I,200
	STA	A,TLOS1
	JMP	A,SE5
SE2:	CPX	I,1
	BNE	SE3
	STA	A,TPOS2
	LDA	Z,TEMP3
	STA	A,TLOS2
	JMP	A,SE5
SE3:	CPX	I,2
	BNE	SE4
	ORA	I,200
SE8:	STA	A,TPOS3
	STA	A,TPOS4
	LDA	Z,TEMP3
	ORA	I,200
	STA	A,TLOS3
	JMP	A,SE5
SE4:	STA	A,TPOS4
	LDA	Z,TEMP3
	STA	A,TLOS4
SE5:	INX
	CPX	I,4
	BNE	SE1
	LDA	Z,AFLAG
	BEQ	SE20
	LDX	I,0
SE10:	LDA	ZX,SCR		;IF PLAYER REACHES
	CMP	Z,HSCR		;HSCR, LOCK HIM OUT
	BNE	SE11
	LDA	I,2
	STA	ZX,FLAG1
SE11:	INX
	CPX	I,4
	BNE	SE10
SE20:	RTS
DOTS1:	.BYTE	34,35,35,36,37,37,37
DOTS2:	.BYTE	34,34,35,35,35,36,37
TICK:	STA	A,CLICK+1	;GENERATES A CLICK
	STY	Z,TEMP3
	STX	Z,TEMP3+1
	LDY	I,0
	LDX	I,1
TK1:	DEY			;WAIT 5 MSEC
	BNE	S,-1
	DEX
	BNE	TK1
	STA	A,CLICK
	LDY	Z,TEMP3
	LDX	Z,TEMP3+1
	RTS
SETUP:	LDA	I,0
	STA	Z,COINS
	STA	Z,CREDIT
	STA	A,CLICK
	TAX
SU1:	STA	ZX,SCR
	INX
	CPX	I,4
	BNE	SU1
	RTS
WAIT:	BIT	A,COINAD	;CONTINUALLY LOOK FOR COINS
	BPL	WA2
	BVS	WA1
WA2:	JSR	A,COIN
WA1:	LDA	A,AMODE
	ROL
	ROL
	BPL	WAIT
	STA	A,TREST		;PULSE WATCHDOG
	RTS
INITL:	LDA	I,SPOS1&377	;SETUP INITIAL POSITIONS
	STA	Z,POS1
	LDA	I,SPOS1&177400/256.
	STA	Z,POS1+1
	LDA	I,SPOS2&377
	STA	Z,POS2
	LDA	I,SPOS2&177400/256.
	STA	Z,POS2+1
	LDA	I,SPOS3&377
	STA	Z,POS3
	LDA	I,SPOS3&177400/256.
	STA	Z,POS3+1
	LDA	I,SPOS4&377
	STA	Z,POS4
	LDA	I,SPOS4&177400/256.
	STA	Z,POS4+1
	LDA	I,2
	STA	Z,ADIR1
	LDA	I,3
	STA	Z,ADIR1+1
	LDA	I,0
	STA	Z,ADIR1+2
	LDA	I,1
	STA	Z,ADIR1+3
	LDA	I,274
	STA	Z,ACOD1
	STA	A,SPOS1
	LDA	I,75
	STA	Z,ACOD1+1
	STA	A,SPOS2
	LDA	I,272
	STA	Z,ACOD1+2
	STA	A,SPOS3
	LDA	I,73
	STA	Z,ACOD1+3
	STA	A,SPOS4
	LDA	I,14.		;SET UP TIMER
	STA	Z,TIMER
	STA	Z,TAMT
	LDA	I,8.
	LDY	I,2
	LDX	I,0
I4:	STA	ZX,FTIM1
	STY	ZX,STIM1
	INX
	CPX	I,4
	BNE	I4
	LDA	A,GSW		;SET GAME LENGTH
	AND	I,300
	CLC
	ROL
	ROL
	ROL
	ADC	I,3
	STA	Z,HSCR
	LDA	I,0
	STA	Z,TOG
	STA	Z,SNUM
	STA	Z,CNTRL
	LDX	I,0
I5:	STA	ZX,FLAG1
	STA	ZX,PWALL1
	STA	ZX,SIMUL
	INX
	CPX	I,4
	BNE	I5
	LDA	I,PLAYFIELD+37&377
	STA	Z,PTR
	LDA	I,PLAYFIELD+37&177400/256.
	STA	Z,PTR+1
	LDX	I,0
I3:	LDY	I,0
	LDA	I,234
	STA	NY,PTR
	INY
	STA	NY,PTR
	LDA	Z,PTR
	CLC
	ADC	I,40
	STA	Z,PTR
	LDA	Z,PTR+1
	ADC	I,0
	STA	Z,PTR+1
	INX
	CPX	I,27.
	BNE	I3
	LDX	I,0
	LDA	I,234
I1:	STA	AX,PLAYFIELD
	STA	AX,PLAYFIELD+1540
	INX
	CPX	I,32.
	BNE	I1
	RTS
VALID:	STX	Z,TEMP3		;CHECK TO SEE
	STA	Z,TEMP3+1	;IF IT IS A
	LDX	I,0		;VALID DOMINO
	AND	I,177
VA1:	CMP	AX,CTAB
	BEQ	VA2
	INX
	CPX	I,12.
	BNE	VA1
	LDX	I,0
VA5:	LDA	ZX,FLAG1		;ANY PLAYERS
	CMP	I,377		;STILL COLLIDING?
	BEQ	VA4		;YES
	INX
	CPX	I,4
	BNE	VA5
	LDX	I,0		;NO SET ALL PLAYERS DONE
	LDA	I,2
VA6:	STA	ZX,FLAG1
	INX
	CPX	I,4
	BNE	VA6
VA4:	SEC
	JMP	A,VA3
VA2:	CLC
VA3:	LDA	Z,TEMP3+1
	LDX	Z,TEMP3
	RTS
FIND:	LDX	I,0		;FIND CORRECT
FF1:	CMP	AX,CTAB		;DOMINO INDEX
	BEQ	FF2
	INX
	BPL	FF1
FF2:	RTS
FAR:	LDX	I,0		;FIND CORRECT
FA1:	CMP	AX,KTAB		;ARROW INDEX
	BEQ	FA2
	INX
	BPL	FA1
FA2:	RTS
BLANK:	LDA	I,0		;BLANKS SCREEN
	LDX	I,340
B1:	DEX
	STA	AX,PLAYFIELD
	STA	AX,PLAYFIELD+224.
	STA	AX,PLAYFIELD+448.
	STA	AX,PLAYFIELD+672.
	BNE	B1
	RTS
UPOS:	STX	Z,TEMP2+1
	JSR	A,FIND		;GET CORRECT
	TXA			;DOMINO INDEX
	TAY
	LDA	Z,TEMP2+1
	ASL
	TAX
	LDA	AY,OTABL	;GET NEXT POSITION
	CLC
	ADC	ZX,POS1
	STA	ZX,POS1
	LDA	AY,OTABH
	ADC	ZX,POS1+1
	STA	ZX,POS1+1
	LDX	Z,TEMP2+1
	RTS
NPOS:	STX	Z,TEMP2+1
	JSR	A,FAR		;GET CORRECT ARROW
	TXA
	TAY
	LDA	Z,TEMP2+1
	ASL
	TAX
	LDA	AY,PTABL	;COMPUTE NEXT POSITION
	CLC
	ADC	ZX,POS1
	STA	ZX,POS1
	LDA	AY,PTABH
	ADC	ZX,POS1+1
	STA	ZX,POS1+1
	LDX	Z,TEMP2+1
	RTS
COIN:	JSR	A,KOIN		;GET COINS
CO7:	LDA	A,CSW
	BPL	CO1
	ROL
	BPL	CO2
	LDA	Z,COINS		;1 COIN 2 CREDITS
	BNE	S,+3
CO5:	RTS
	DEC	Z,COINS
	INC	Z,CREDIT
	INC	Z,CREDIT
	JMP	A,CO7
	NOP
CO2:	LDA	Z,COINS		;1 COIN 1 CREDIT
	BEQ	CO5
	DEC	Z,COINS
	INC	Z,CREDIT
	JMP	A,CO7
	NOP
CO1:	LDA	Z,COINS
	BEQ	CO5
	DEC	Z,COINS
	LDA	Z,CREDIT
	CLC
	ADC	I,4
	STA	Z,CREDIT
	JMP	A,CO7
	NOP
KOIN:	LDA	I,9.
	STA	Z,TEMP1
	STA	Z,TEMP1+1
K1:	BIT	A,COINAD
	BPL	S,+5
	BVC	S,+3
	RTS
	STA	A,TREST		;PULSE WATCHDOG
	LDY	I,372
	DEY
	BNE	S,-1
	BIT	A,COINAD
	BVC	S,+8.
	LDA	I,9.
	STA	Z,TEMP1
	BPL	K2
	LDA	Z,TEMP1
	BEQ	K2
	DEC	Z,TEMP1
	BNE	K2
	INC	Z,COINS
K2:	BIT	A,COINAD
	BPL	S,+8.
	LDA	I,9.
	STA	Z,TEMP1+1
	BPL	K1
	LDA	Z,TEMP1+1
	BEQ	K1
	DEC	Z,TEMP1+1
	BNE	K1
	INC	Z,COINS
	JMP	A,K1
PTABL:	.BYTE	340,1,40,377
PTABH:	.BYTE	377,0,0,377
BTAB:	.BYTE	0,3,6,9.
CTAB:	.BYTE	50,52,42,54,56,46
	.BYTE	40,142,152,44,146,156
OTABL:	.BYTE	40,377,40,377,340,377
	.BYTE	340,1,340,1,40,1
OTABH:	.BYTE	0,377,0,377,377,377
	.BYTE	377,0,377,0,0,0
SCAN:	LDX	I,0
SC10:	STX	Z,TEMP2+1
	LDA	ZX,FLAG1	;PLAYER ACTIVE
	BNE	SC6		;NO
	LDA	ZX,PF1		;YES, USER OR COMPUTER?
	BEQ	SC2		;COMPUTER
	LDA	Z,TEMP2+1	;USER
	ASL
	TAX
	LDA	AX,SWTAB
	STA	Z,PTR
	LDA	AX,SWTAB+1
	STA	Z,PTR+1
	LDX	Z,TEMP2+1
	LDY	I,0
SC5:	LDA	NY,PTR		;USER, GET SWITCHES
	BPL	SC4
	INY
	CPY	I,4
	BNE	SC5
	BEQ	SC6		;NO CHANGE, IGNORE SWITCHES
SC4:	STY	ZX,ADIR1	;UPDATE DIRECTION
	LDA	AY,KTAB		;GET NEW ARROW CODE
	CPX	I,0
	BNE	SC1
	ORA	I,204
	BMI	SC7
SC1:	CPX	I,2
	BNE	SC3
	ORA	I,200
	BMI	SC7
SC3:	CPX	I,1
	BNE	SC7
	ORA	I,4
SC7:	STA	ZX,ACOD1	;SAVE IT
	LDY	I,0
	JSR	A,OUTX		;AND OUTPUT NEW ARROW
	JMP	A,SC6
SC2:	CPX	Z,TOG		;ON COMPUTER PLAY
	BNE	SC6		;CHANGE ARROW ONLY
	LDA	Z,TIMER		;ONCE PER MOVE
	BNE	SC6
	LDA	Z,CNTRL		;STILL UNDER COMPUTER CONTROL?
	BNE	SC6		;NO
	JSR	A,NEXT
SC6:	INX			;DONE ALL FOUR PLAYERS?
	CPX	I,4
	BNE	SC10		;NO
	RTS			;YES
NEXT:	STX	Z,TEMP2
	LDY	I,0		;CHOOSE STRATEGY
	LDA	Z,TAMT		;DEPENDENT ON GAME TIME
	CMP	I,10.
	BCS	NE60
	LDY	I,1
NE60:	STY	Z,SNUM
	LDA	I,0
	STA	Z,T1
	STA	Z,T2
	STA	Z,T3
	STA	Z,T4
	LDA	Z,TEMP2
	ASL
	TAX
	LDA	ZX,POS1
	SEC
	SBC	I,40
	STA	Z,PTR
	LDA	ZX,POS1+1
	SBC	I,0
	STA	Z,PTR+1
NE1:	LDX	I,0		;LOOK AT SURROUNDING CELLS
	LDY	I,0		;IF NON-EMPTY SKIP CHECK LOGIC
	LDA	NY,PTR
	BNE	NE2		;IF EMPTY, CHECK ADJACENT
	LDA	Z,PTR		;4 CELLS TO GET AN EXIT COUNT
	SEC
	SBC	I,40
	STA	Z,TEMP1
	LDA	Z,PTR+1
	SBC	I,0
	STA	Z,TEMP1+1
	JSR	A,CHECK
NE2:	LDY	I,41
	INX
	LDA	NY,PTR
	BNE	NE3
	LDA	Z,PTR
	CLC
	ADC	I,1
	STA	Z,TEMP1
	LDA	Z,PTR+1
	ADC	I,0
	STA	Z,TEMP1+1
	JSR	A,CHECK
NE3:	LDY	I,100
	INX
	LDA	NY,PTR
	BNE	NE4
	LDA	Z,PTR
	CLC
	ADC	I,40
	STA	Z,TEMP1
	LDA	Z,PTR+1
	ADC	I,0
	STA	Z,TEMP1+1
	JSR	A,CHECK
NE4:	LDY	I,37
	INX
	LDA	NY,PTR
	BNE	NE5
	LDA	Z,PTR
	SEC
	SBC	I,1
	STA	Z,TEMP1
	LDA	Z,PTR+1
	SBC	I,0
	STA	Z,TEMP1+1
	JSR	A,CHECK
NE5:	LDY	I,0
NE6:	LDX	AY,T1		;GET STATISTICAL CONVERSION
	LDA	Z,SNUM		;CHOOSE PROPER STRATEGY
	BNE	NE40
	LDA	AX,STAB1
	BPL	NE41
NE40:	LDA	AX,STAB2
NE41:	STA	AY,T1
	INY
	CPY	I,4
	BNE	NE6
	LDX	Z,SNUM		;GET PROPER STRATEGY
	LDA	AX,SFOR
	STA	Z,TEMP1
	LDY	Z,TEMP2		;GIVE FORWARD DIRECTION
	LDX	AY,ADIR1	;AN ADDED BIAS
	LDY	I,0
	TYA
NE7:	CLC
	ADC	ZX,T1
	INY
	CPY	Z,TEMP1
	BNE	NE7
	STA	ZX,T1
	LDX	Z,SNUM		;GET PROPER STRATEGY
	LDA	AX,SCEN
	STA	Z,TEMP1
	LDX	I,1		;GIVE IMPETUS TOWARD CENTER
	LDA	Z,TEMP2
	ASL
	TAY
	LDA	AY,POS1
	AND 	I,20
	BEQ	S,+4
	LDX	I,3
	LDA	I,0
	TAY
NE30:	CLC
	ADC	ZX,T1
	INY
	CPY	Z,TEMP1
	BNE	NE30
	STA	ZX,T1
	LDX	I,0
	LDA	Z,TEMP2
	ASL
	TAY
	LDA	AY,POS1+1
	AND	I,2
	BNE	S,+4
	LDX	I,2
	LDA	I,0
	TAY
NE31:	CLC
	ADC	ZX,T1
	INY
	CPY	Z,TEMP1
	BNE	NE31
	STA	ZX,T1
	LDA	Z,T1
	CLC
	ADC	Z,T2
	CLC
	ADC	Z,T3
	CLC
	ADC	Z,T4
	STA	Z,TEMP1
	BEQ	NE50
	JSR	A,RANDU		;GET RANDOM #
NE8:	CMP	Z,TEMP1		;PUT RANDOM #
	BCC	NE9		;IN PROPER RANGE
	SEC
	SBC	Z,TEMP1
	JMP	A,NE8
NE9:	STA	Z,TEMP1
	LDY	I,0
	STY	Z,TEMP1+1
	LDA	Z,T1		;PICK DIRECTION
	BEQ	NE20
	CMP	Z,TEMP1
	BCS	NE10
	STA	Z,TEMP1+1
NE20:	INY
	LDA	Z,T2
	BEQ	NE21
	CLC
	ADC	Z,TEMP1+1
	CMP	Z,TEMP1
	BCS	NE10
	STA	Z,TEMP1+1
NE21:	INY
	LDA	Z,T3
	BEQ	NE22
	CLC
	ADC	Z,TEMP1+1
	CMP	Z,TEMP1
	BCS	NE10
NE22:	INY
NE10:	LDX	Z,TEMP2
	STY	ZX,ADIR1
	LDA	AY,KTAB
	CPX	I,0
	BNE	NE71
	ORA	I,204
	BMI	NE70
NE71:	CPX	I,2
	BNE	NE72
	ORA	I,200
	BMI	NE70
NE72:	CPX	I,1
	BNE	NE70
	ORA	I,4
NE70:	STA	ZX,ACOD1
	LDY	I,0
	LDX	Z,TEMP2
	JSR	A,OUTX		;OUTPUT NEW ARROW
NE50:	LDX	Z,TEMP2
	RTS
STAB1:	.BYTE	0,1,7.,1
STAB2:	.BYTE	0,1,12.,1
SFOR:	.BYTE	6,12.
SCEN:	.BYTE	5,1
CHECK:	LDY	I,0		;SCAN SURROUNDING CELLS
	LDA	NY,TEMP1	;EVERY EMPTY CELL
	BNE	S,+4		;BUMP COUNTER
	INC	ZX,T1
	LDY	I,41
	LDA	NY,TEMP1
	BNE	S,+4
	INC	ZX,T1
	LDY	I,100
	LDA	NY,TEMP1
	BNE	S,+4
	INC	ZX,T1
	LDY	I,37
	LDA	NY,TEMP1
	BNE	S,+4
	INC	ZX,T1
	RTS
;ROUTINE TO PRODUCE A PSEUDO-RANDOM 8-BIT NUMBER
RANDU:	LDA	I,0
	STA	Z,TEMP1+1
	LDA	Z,UP4
	ROL
	ROL
	ROL	Z,TEMP1+1
	LDA	Z,UP1
	AND	I,10
	LSR
	LSR
	LSR
	EOR	Z,TEMP1+1
	LSR
	ROL	Z,UP1
	ROL	Z,UP2
	ROL	Z,UP3
	ROL	Z,UP4
	LDA	Z,UP1		;CHECK FOR LOCK-UP
	BNE	RA1
	LDA	Z,UP2
	BNE	RA1
	LDA	Z,UP3
	BNE	RA1
	LDA	Z,UP4
	BNE	RA1
	LDA	I,42		;LOCK-UP OCCURRED
	STA	Z,UP3
RA1:	LDA	Z,UP3
	RTS
;RAM TEST
TRAM:	LDX	I,0		;FILL UP RAM WITH TEST PATTERN
TT1:	TXA
	CLC
	ADC	I,4
	STA	AX,2000
	TXA
	CLC
	ADC	I,5
	STA	AX,2400
	TXA
	CLC
	ADC	I,6
	STA	AX,3000
	TXA
	CLC
	ADC	I,7
	CPX	I,200		;DO NOT CHECK WORKING RAM
	BCS	S,+5
	STA	AX,3400
	INX
	BNE	TT1
TT2:	TXA			;NOW CHECK RAM CELLS
	CLC
	ADC	I,4
TT3:	CMP	AX,2000		;IF RAM CELL BAD,
	STA	A,TREST
	BNE	TT3		;HANG ON CELL
	TXA
	CLC
	ADC	I,5
TT4:	CMP	AX,2400
	STA	A,TREST
	BNE	TT4
	TXA
	CLC
	ADC	I,6
TT5:	CMP	AX,3000
	STA	A,TREST
	BNE	TT5
	TXA
	CLC
	ADC	I,7
	CPX	I,200
	BCS	TT40
TT6:	CMP	AX,3400
	STA	A,TREST
	BNE	TT6
TT40:	INX
	BNE	TT2
	LDA	I,0		;TURN OFF SOUND
	STA	Z,CRASH
	LDX	I,0
TT30:	JSR	A,WAIT
	DEX
	BNE	TT30
	JSR	A,BLANK		;BLANK SCREEN
	LDX	I,0		;ROM CHECKSUM
	LDA	I,PWRON&177400/256.
	STA	Z,PTR+1
TT8:	LDA	I,4
	STA	Z,TEMP1
	LDA	I,0
	STA	Z,PTR
	TAY
TT7:	CLC
	ADC	NY,PTR		;BUILD CHECKSUM
	INY
	STA	A,TREST		;PULSE WATCHDOG
	BNE	TT7
	INC	Z,PTR+1
	DEC	Z,TEMP1
	BNE	TT7
	CMP	AX,CKSUM
	BEQ	TT9
	TXA			;BAD ROM CHECKSUM
	ORA	I,60
	STA	AX,PLAYFIELD+1020	;OUTPUT ROM # TO SCREEN
TT9:	INX
	CPX	I,4
	BNE	TT8
	STA	A,AMODE		;TURN ON SOUND
	LDA	I,14
	STA	Z,SOUND
	STA	A,SB1+1		;TURN ON LITES
	STA	A,SB2+1
	STA	A,SB3+1
	STA	A,SB4+1
TT10:	LDX	I,0		;SWITCH TEST
	LDY	I,0
TT11:	LDA	AX,4030
	BMI	TT12
	LDY	I,6
TT12:	INX
	CPX	I,8.
	BNE	TT11
	LDX	I,0
TT15:	LDA	AX,4050
	BMI	TT16
	LDY	I,6
TT16:	INX
	CPX	I,8.
	BNE	TT15
	LDA	A,4100
	BMI	S,+4
	LDY	I,6
	ROL
	BMI	S,+4
	LDY	I,6
	STY	Z,CRASH
TT20:	LDA	A,AMODE
	ROL
	ROL
	BPL	TT20
	STA	A,TREST		;PULSE WATCHDOG
	LDA	I,0
	STA	Z,CRASH
	LDA	A,ST
	BPL	TT10
	JMP	A,PWRON
CKSUM:	.BYTE	172,200,134,60,172
KTAB:	.BYTE	72,73,70,71
TAB1:	.BYTE	50,50,52,52,52,40
	.BYTE	40,40,156,156,156,50
TAB2:	.BYTE	42,42,54,54,54,56
	.BYTE	56,56,44,44,44,42
TAB3:	.BYTE	50,50,46,46,46,40
	.BYTE	40,40,142,142,142,50
TAB4:	.BYTE	146,146,54,54,54,152
	.BYTE	152,152,44,44,44,146
NMI:	PHA
	TXA
	PHA
	CLD
	LDA	Z,RTEST		;CHECK RAM CELLS
	CMP	I,222
	BNE	NM2
	LDA	Z,RTEST+1
	CMP	I,77
	BNE	NM2
	TSX
	LDA	AX,405		;GET PCH
	CMP	I,60		;VALID RANGE?
	BCC	NM3
	CMP	I,100
	BCS	NM3
NM1:	PLA
	TAX
	PLA
	RTI
NM2:	LDA	I,222
	STA	Z,RTEST
	LDA	I,77
	STA	Z,RTEST+1
NM3:	JMP	A,PWRON
MESG:	.WORD	MES0
	.WORD	MES1
	.WORD	MES2
	.WORD	MES3
	.WORD	MES4
	.WORD	MES5
	.WORD	MES6
	.WORD	MES7
	.WORD	MES8
POSM:	.WORD	PLAYFIELD+54
	.WORD	PLAYFIELD+14
	.WORD	PLAYFIELD+150
	.WORD	PLAYFIELD+150
	.WORD	PLAYFIELD+150
	.WORD	PLAYFIELD+502
	.WORD	PLAYFIELD+1045
	.WORD	PLAYFIELD+715
	.WORD	PLAYFIELD+712
BPOS:	.WORD	SPOS1
	.WORD	SPOS2
	.WORD	SPOS3
	.WORD	SPOS4
SWTAB:	.WORD	SW1
	.WORD	SW2
	.WORD	SW3
	.WORD	SW4
MES0:	.BYTE	75
	.ASCII	/ SCORE /
	.BYTE	277,0
MES1:	.ASCIZ	/GAME OVER/
MES2:	.ASCIZ	/1 PLAY PER COIN/
MES3:	.ASCIZ	/2 PLAYS PER COIN/
MES4:	.ASCIZ	/4 PLAYS PER COIN/
MES5:	.ASCIZ	/YOU HAVE CREDIT FOR   PLAYERS/
MES6:	.ASCIZ	/PUSH YOUR START BUTTON/
MES7:	.ASCIZ	/WINNER/
MES8:	.ASCIZ	/EACH PLAYER/
	.REPT	37772-.
	.BYTE	0
	.ENDM
	.WORD	NMI,PWRON,PWRON
	.END
                                                